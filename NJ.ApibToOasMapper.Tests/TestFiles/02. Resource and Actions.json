{
    "openapi": "3.0.3",
    "info": {
        "title": "Resource and Actions API",
        "version": "1.0.0",
        "description": "This API example demonstrates how to define a resource with multiple actions.\n\n## API Blueprint\n\n+ [Previous: The Simplest API](01.%20Simplest%20API.md)\n\n+ [This: Raw API Blueprint](https://raw.github.com/apiaryio/api-blueprint/master/examples/02.%20Resource%20and%20Actions.md)\n\n+ [Next: Named Resource and Actions](03.%20Named%20Resource%20and%20Actions.md)"
    },
    "paths": {
        "/message": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "example": "Hello World!\n"
                            }
                        }
                    }
                },
                "summary": "",
                "operationId": "",
                "description": "Here we define an action using the `GET` [HTTP request method](http://www.w3schools.com/tags/ref_httpmethods.asp) for our resource `/message`.\n\nAs with every good action it should return a\n[response](http://www.w3.org/TR/di-gloss/#def-http-response). A response always\nbears a status code. Code 200 is great as it means all is green. Responding\nwith some data can be a great idea as well so let's add a plain text message to\nour response.",
                "tags": [],
                "parameters": []
            },
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "content": {}
                    }
                },
                "summary": "",
                "operationId": "",
                "description": "OK, let's add another action. This time to put new data to our resource\n(essentially an update action). We will need to send something in a\n[request](http://www.w3.org/TR/di-gloss/#def-http-request) and then send a\nresponse back confirming the posting was a success (_HTTP Status Code 204 ~\nResource updated successfully, no content is returned_).",
                "tags": [],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "text/plain": {
                            "example": "All your base are belong to us.\n"
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {}
    },
    "tags": []
}